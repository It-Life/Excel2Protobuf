// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Question_Config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ConfigData {

  /// <summary>Holder for reflection information generated from Question_Config.proto</summary>
  public static partial class QuestionConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for Question_Config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QuestionConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVRdWVzdGlvbl9Db25maWcucHJvdG8SCkNvbmZpZ0RhdGEiqwEKD1F1ZXN0",
            "aW9uX0NvbmZpZxIKCgJpZBgBIAEoDRILCgN0eHQYAiABKAkSDAoEZm9udBgD",
            "IAEoCRILCgNleHAYBCABKAkSDwoHY29udGV4dBgFIAEoCRIMCgRhbnMxGAYg",
            "ASgJEgwKBGFuczIYByABKAkSDAoEYW5zMxgIIAEoCRIMCgRhbnM0GAkgASgJ",
            "Eg0KBXJpZ2h0GAogASgNEgwKBGNoYXIYCyABKAkiyQEKFFF1ZXN0aW9uX0Nv",
            "bmZpZ19EYXRhElgKFVF1ZXN0aW9uX0NvbmZpZ19pdGVtcxgBIAMoCzI5LkNv",
            "bmZpZ0RhdGEuUXVlc3Rpb25fQ29uZmlnX0RhdGEuUXVlc3Rpb25Db25maWdJ",
            "dGVtc0VudHJ5GlcKGFF1ZXN0aW9uQ29uZmlnSXRlbXNFbnRyeRILCgNrZXkY",
            "ASABKA0SKgoFdmFsdWUYAiABKAsyGy5Db25maWdEYXRhLlF1ZXN0aW9uX0Nv",
            "bmZpZzoCOAFCIwohY29tLnRyaW5pdGlnYW1lcy5zZXJ2ZXIuY29uZi5hdXRv",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigData.Question_Config), global::ConfigData.Question_Config.Parser, new[]{ "Id", "Txt", "Font", "Exp", "Context", "Ans1", "Ans2", "Ans3", "Ans4", "Right", "Char" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigData.Question_Config_Data), global::ConfigData.Question_Config_Data.Parser, new[]{ "QuestionConfigItems" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Question_Config : pb::IMessage<Question_Config> {
    private static readonly pb::MessageParser<Question_Config> _parser = new pb::MessageParser<Question_Config>(() => new Question_Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Question_Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigData.QuestionConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Question_Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Question_Config(Question_Config other) : this() {
      id_ = other.id_;
      txt_ = other.txt_;
      font_ = other.font_;
      exp_ = other.exp_;
      context_ = other.context_;
      ans1_ = other.ans1_;
      ans2_ = other.ans2_;
      ans3_ = other.ans3_;
      ans4_ = other.ans4_;
      right_ = other.right_;
      char_ = other.char_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Question_Config Clone() {
      return new Question_Config(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    ///* 标示 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "txt" field.</summary>
    public const int TxtFieldNumber = 2;
    private string txt_ = "";
    /// <summary>
    ///* 文字 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Txt {
      get { return txt_; }
      set {
        txt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "font" field.</summary>
    public const int FontFieldNumber = 3;
    private string font_ = "";
    /// <summary>
    ///* 字体 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Font {
      get { return font_; }
      set {
        font_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 4;
    private string exp_ = "";
    /// <summary>
    ///* 备注 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Exp {
      get { return exp_; }
      set {
        exp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 5;
    private string context_ = "";
    /// <summary>
    ///* 提问内容 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Context {
      get { return context_; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ans1" field.</summary>
    public const int Ans1FieldNumber = 6;
    private string ans1_ = "";
    /// <summary>
    ///* 答案1 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ans1 {
      get { return ans1_; }
      set {
        ans1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ans2" field.</summary>
    public const int Ans2FieldNumber = 7;
    private string ans2_ = "";
    /// <summary>
    ///* 答案2 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ans2 {
      get { return ans2_; }
      set {
        ans2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ans3" field.</summary>
    public const int Ans3FieldNumber = 8;
    private string ans3_ = "";
    /// <summary>
    ///* 答案3 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ans3 {
      get { return ans3_; }
      set {
        ans3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ans4" field.</summary>
    public const int Ans4FieldNumber = 9;
    private string ans4_ = "";
    /// <summary>
    ///* 答案4 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ans4 {
      get { return ans4_; }
      set {
        ans4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "right" field.</summary>
    public const int RightFieldNumber = 10;
    private uint right_;
    /// <summary>
    ///* 正确列 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Right {
      get { return right_; }
      set {
        right_ = value;
      }
    }

    /// <summary>Field number for the "char" field.</summary>
    public const int CharFieldNumber = 11;
    private string char_ = "";
    /// <summary>
    ///* 人物 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Char {
      get { return char_; }
      set {
        char_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Question_Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Question_Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Txt != other.Txt) return false;
      if (Font != other.Font) return false;
      if (Exp != other.Exp) return false;
      if (Context != other.Context) return false;
      if (Ans1 != other.Ans1) return false;
      if (Ans2 != other.Ans2) return false;
      if (Ans3 != other.Ans3) return false;
      if (Ans4 != other.Ans4) return false;
      if (Right != other.Right) return false;
      if (Char != other.Char) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Txt.Length != 0) hash ^= Txt.GetHashCode();
      if (Font.Length != 0) hash ^= Font.GetHashCode();
      if (Exp.Length != 0) hash ^= Exp.GetHashCode();
      if (Context.Length != 0) hash ^= Context.GetHashCode();
      if (Ans1.Length != 0) hash ^= Ans1.GetHashCode();
      if (Ans2.Length != 0) hash ^= Ans2.GetHashCode();
      if (Ans3.Length != 0) hash ^= Ans3.GetHashCode();
      if (Ans4.Length != 0) hash ^= Ans4.GetHashCode();
      if (Right != 0) hash ^= Right.GetHashCode();
      if (Char.Length != 0) hash ^= Char.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Txt.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Txt);
      }
      if (Font.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Font);
      }
      if (Exp.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Exp);
      }
      if (Context.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Context);
      }
      if (Ans1.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Ans1);
      }
      if (Ans2.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Ans2);
      }
      if (Ans3.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Ans3);
      }
      if (Ans4.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Ans4);
      }
      if (Right != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Right);
      }
      if (Char.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Char);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Txt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Txt);
      }
      if (Font.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Font);
      }
      if (Exp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exp);
      }
      if (Context.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
      }
      if (Ans1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ans1);
      }
      if (Ans2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ans2);
      }
      if (Ans3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ans3);
      }
      if (Ans4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ans4);
      }
      if (Right != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Right);
      }
      if (Char.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Char);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Question_Config other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Txt.Length != 0) {
        Txt = other.Txt;
      }
      if (other.Font.Length != 0) {
        Font = other.Font;
      }
      if (other.Exp.Length != 0) {
        Exp = other.Exp;
      }
      if (other.Context.Length != 0) {
        Context = other.Context;
      }
      if (other.Ans1.Length != 0) {
        Ans1 = other.Ans1;
      }
      if (other.Ans2.Length != 0) {
        Ans2 = other.Ans2;
      }
      if (other.Ans3.Length != 0) {
        Ans3 = other.Ans3;
      }
      if (other.Ans4.Length != 0) {
        Ans4 = other.Ans4;
      }
      if (other.Right != 0) {
        Right = other.Right;
      }
      if (other.Char.Length != 0) {
        Char = other.Char;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Txt = input.ReadString();
            break;
          }
          case 26: {
            Font = input.ReadString();
            break;
          }
          case 34: {
            Exp = input.ReadString();
            break;
          }
          case 42: {
            Context = input.ReadString();
            break;
          }
          case 50: {
            Ans1 = input.ReadString();
            break;
          }
          case 58: {
            Ans2 = input.ReadString();
            break;
          }
          case 66: {
            Ans3 = input.ReadString();
            break;
          }
          case 74: {
            Ans4 = input.ReadString();
            break;
          }
          case 80: {
            Right = input.ReadUInt32();
            break;
          }
          case 90: {
            Char = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Question_Config_Data : pb::IMessage<Question_Config_Data> {
    private static readonly pb::MessageParser<Question_Config_Data> _parser = new pb::MessageParser<Question_Config_Data>(() => new Question_Config_Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Question_Config_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigData.QuestionConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Question_Config_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Question_Config_Data(Question_Config_Data other) : this() {
      questionConfigItems_ = other.questionConfigItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Question_Config_Data Clone() {
      return new Question_Config_Data(this);
    }

    /// <summary>Field number for the "Question_Config_items" field.</summary>
    public const int QuestionConfigItemsFieldNumber = 1;
    private static readonly pbc::MapField<uint, global::ConfigData.Question_Config>.Codec _map_questionConfigItems_codec
        = new pbc::MapField<uint, global::ConfigData.Question_Config>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::ConfigData.Question_Config.Parser), 10);
    private readonly pbc::MapField<uint, global::ConfigData.Question_Config> questionConfigItems_ = new pbc::MapField<uint, global::ConfigData.Question_Config>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<uint, global::ConfigData.Question_Config> QuestionConfigItems {
      get { return questionConfigItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Question_Config_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Question_Config_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!QuestionConfigItems.Equals(other.QuestionConfigItems)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= QuestionConfigItems.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      questionConfigItems_.WriteTo(output, _map_questionConfigItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += questionConfigItems_.CalculateSize(_map_questionConfigItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Question_Config_Data other) {
      if (other == null) {
        return;
      }
      questionConfigItems_.Add(other.questionConfigItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            questionConfigItems_.AddEntriesFrom(input, _map_questionConfigItems_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
